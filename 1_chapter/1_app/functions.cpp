#include <iostream>

using namespace std;

/* Hello, World */
int hello_world() {
    cout << "Hello world!" << "\n";
    return 0;
}

/* N белочек нашли K орешков и решили разделить их поровну.Определите, сколько орешков достанется каждой белочке.*/
int nuts_for_everyone() {
    int a = 0, b = 0;
    cin >> a >> b;
    cout << b / a;
    return 0;
}

/* N белочек нашли K орешков и решили разделить их поровну. Определите, сколько орешков останется после того, как все белочки возьмут себе равное количество орешков.*/
int nuts_left() {
    // put your code here
    int a = 0, b = 0;
    cin >> a >> b;
    cout << b % a;
    return 0;
}

/* Дано натуральное число, выведите его последнюю цифру.*/
int last_digit() {
    int a = 0;
    cin >> a;
    cout << a % 10;
    return 0;
}

/* Дано двузначное число. Выведите его первую цифру (число десятков) */
int first_digit_of_two() {
    int a = 0;
    cin >> a;
    cout << a / 10;
    return 0;
}

/* Дано целое неотрицательное число N, определите число десятков в нем (предпоследнюю цифру числа). 
 *Если предпоследней цифры нет, то можно считать, что число десятков равно нулю.
 */
int second_from_end_digit() {
    int a = 0;
    cin >> a;
    cout << (a / 10) % 10;
    return 0;
}

/* Дано целое трехзначное число. Найдите сумму его цифр. */
int sum_ciphr() {
    int a = 0;
    cin >> a;
    cout << (a % 10) + (a / 100) + ((a / 10) % 10);
    return 0;
}

/* На вход дается натуральное число N. Выведите следующее за ним четное число */
int next_chet() {
    int a = 0;
    cin >> a;
    cout << a + 2 - (a % 2);
    return 0;
}

/* В некоторой школе решили набрать три новых математических класса и оборудовать кабинеты для них новыми партами. 
За каждой партой может сидеть два учащихся. Известно количество учащихся в каждом из трех классов. 
Выведите наименьшее число парт, которое нужно приобрести для них. Каждый класс сидит в своем кабинете.*/

int school_parts() {
    int a = 0, b = 0, c = 0;
    cin >> a >> b >> c;
    cout << (a / 2 + a % 2) + (b / 2 + b % 2) + (c / 2 + c % 2);
    return 0;
}

/*Пирожок в столовой стоит A рублей и B копеек. Определите, сколько рублей и копеек нужно заплатить за N пирожков.*/

int rub_copeek() {
    int a = 0, b = 0, N = 0;
    cin >> a >> b >> N;
    int rub = a * N + (b * N) / 100;

    cout << rub << " " << (b * N) % 100;
    return 0;
}

/* Электронные часы показывают время в формате h:mm:ss (от 0:00:00 до 23:59:59), 
то есть сначала записывается количество часов, потом обязательно двузначное количество минут, 
затем обязательно двузначное количество секунд. Количество минут и секунд при необходимости 
дополняются до двузначного числа нулями.*/
int date_format() {
    int h = 0, m = 0, s = 0, N = 0;
    cin >> N;
    h = (N / 3600) % 24;
    m = N / 60;
    s = N % 60;
    cout << h << ":";
    cout.fill('0');
    cout.width(2);
    cout << m % 60 << ":";
    cout.fill('0');
    cout.width(2);
    cout << s;
    return 0;
}

/* Даны значения двух моментов времени, принадлежащих одним и тем же суткам: 
часы, минуты и секунды для каждого из моментов времени. Известно, 
что второй момент времени наступил не раньше первого. Определите, 
сколько секунд прошло между двумя моментами времени.*/

int differ_time() {
    int h1 = 0, h2 = 0, m1 = 0, m2 = 0, s1 = 0, s2 = 0, res_time1 = 0, res_time2 = 0;
    cin >> h1 >> m1 >> s1;
    cin >> h2 >> m2 >> s2;
    res_time1 = (h1 * 3600) + (m1 * 60) + s1;
    res_time2 = (h2 * 3600) + (m2 * 60) + s2;
    cout << res_time2 - res_time1;
    return 0;
}