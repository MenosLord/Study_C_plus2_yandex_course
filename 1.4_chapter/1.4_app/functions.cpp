#include <iostream>

using namespace std;

/*ƒаны два целых числа. ¬ыведите значение наибольшего из них. ≈сли числа равны, выведите любое из них.*/
int that_more() {
    int a = 0, b = 0;
    cin >> a >> b;
    if (a <= b) {
        cout << b;
    }
    else {
        cout << a;
    }
    return 0;
}

/* ƒаны два целых числа. ѕрограмма должна вывести единицу, если первое число больше второго, двойку, если второе больше первого, или ноль, если они равны. */

int that_more_2() {
    int a = 0, b = 0;
    cin >> a >> b;
    if (a > b) {
        cout << "1";
    }
    else if (a == b) {
        cout << "0";
    }
    else {
        cout << "2";
    }
    return 0;
}

/* ƒаны три целых числа.Ќайдите наибольшее из них (программа должна вывести ровно одно целое число). 
ѕод наибольшим в этой задаче понимаетс€ число, которое не меньше, чем любое другое.*/

int that_more_3() {
    int a = 0, b = 0, c = 0;
    cin >> a >> b >> c;
    if (a < b) {
        a = b;
    }
    if (a < c) {
        a = c;
    }
    cout << a;
    return 0;
}

/* ƒаны три натуральных числа A, B, C. ќпределите, существует ли треугольник с такими сторонами. 
≈сли треугольник существует, выведите строку YES, иначе выведите строку NO. */

int existence_triangle() {
    int a = 0, b = 0, c = 0;
    cin >> a >> b >> c;
    if (((a + b) > c) && ((a + c) > b) && ((c + b) > a)) {
        cout << "YES";
    }
    else {
        cout << "NO";
    }
    return 0;
}

/* ƒаны три целых числа. ќпределите, сколько среди них совпадающих. ѕрограмма должна вывести одно из чисел: 
3 (если все совпадают), 2 (если два совпадает) или 0 (если все числа различны). */

int find_coincidences() {
    int a = 0, b = 0, c = 0, count = 0;
    cin >> a >> b >> c;
    if (a == b) {
        count++;
    }
    if (a == c) {
        count++;
    }
    if (b == c) {
        count++;
    }
    if (count == 1) {
        count++;
    }
    cout << count;
    return 0;
}

/* Ўахматна€ ладь€ ходит по горизонтали или вертикали. ƒаны две различные клетки шахматной доски, определите, 
может ли ладь€ попасть с первой клетки на вторую одним ходом. */

int chess_rook() {
    int a1 = 0, b1 = 0, a2 = 0, b2 = 0;
    cin >> a1 >> b1 >> a2 >> b2;
    if (a1 == a2 || b1 == b2) {
        cout << "YES";
    }
    else {
        cout << "NO";
    }
    return 0;
}